---
- name: Configure Zeek Network Security Monitor
  hosts: zeek
  become: true
  vars:
    # Default values, can be overridden in site_config
    default_zeek_home: "/opt/zeek"
    default_zeek_log_path: "/var/log/zeek"
    # site_config, network_prefix, etc., will be loaded/set in pre_tasks

  pre_tasks:
    - name: Determine site name from inventory hostname
      ansible.builtin.set_fact:
        site_name_from_inventory: "{{ inventory_hostname.split('-')[0] }}"
      when: "'-' in inventory_hostname"

    - name: Fail if site name cannot be determined from inventory hostname
      ansible.builtin.fail:
        msg: "Could not determine site name from inventory_hostname '{{ inventory_hostname }}'. Expected format: <site_name>-zeek"
      when: site_name_from_inventory is not defined

    - name: Include site-specific variables
      ansible.builtin.include_vars:
        file: "group_vars/{{ site_name_from_inventory }}.yml"

    - name: Set site_config fact if not loaded directly
      ansible.builtin.set_fact:
        site_config: "{{ hostvars[inventory_hostname].site_config }}"
      when: site_config is not defined and hostvars[inventory_hostname].site_config is defined

    - name: Fail if site_config is not loaded
      ansible.builtin.fail:
        msg: "Failed to load site_config for {{ site_name_from_inventory }}."
      when: site_config is not defined

    - name: Get Ubuntu version
      ansible.builtin.command: lsb_release -cs
      register: ubuntu_version
      changed_when: false

    - name: Get latest Zeek LTS version
      ansible.builtin.uri:
        url: "https://download.opensuse.org/repositories/security:/zeek/xUbuntu_{{ ubuntu_version.stdout }}/"
        return_content: true
      register: zeek_repo_page

    - name: Extract latest Zeek LTS version
      ansible.builtin.set_fact:
        zeek_version: "{{ zeek_repo_page.content | regex_search('zeek-([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
      when: zeek_repo_page is succeeded

    - name: Set network prefix and other variables
      ansible.builtin.set_fact:
        network_prefix: "{{ site_config.network_prefix }}"
        zeek_home: "{{ site_config.zeek.home_dir | default(default_zeek_home) }}"
        zeek_log_path: "{{ site_config.zeek.log_dir | default(default_zeek_log_path) }}"
        zeek_monitor_interfaces: "{{ site_config.zeek.monitor_interfaces | default(['eth1', 'eth2']) }}" # Default to old values if not specified
        opnsense_mgmt_ip: "{{ site_config.opnsense.management_ip | default(network_prefix + '.50.1') }}"

  tasks:
    - name: Add Zeek repository
      ansible.builtin.apt_repository:
        repo: "deb https://download.opensuse.org/repositories/security:/zeek/xUbuntu_{{ ubuntu_version.stdout }}/ /"
        state: present
        filename: security-zeek

    - name: Add Zeek repository key
      ansible.builtin.apt_key:
        url: "https://download.opensuse.org/repositories/security:zeek/xUbuntu_{{ ubuntu_version.stdout }}/Release.key"
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install Zeek and dependencies
      ansible.builtin.apt:
        name:
          - zeek
          - ethtool # For debugging/diagnostics
          - tcpdump # For packet capture/debugging
          - tshark  # For packet analysis
          - inotify-tools # For alert forwarder
        state: present

    - name: Create Zeek log directory
      ansible.builtin.file:
        path: "{{ zeek_log_path }}"
        state: directory
        mode: '0755'

    - name: Configure Zeek local networks (local.zeek)
      ansible.builtin.template: # Use template for more complex configurations
        src: templates/zeek/local.zeek.j2 # Assumes template exists
        dest: "{{ zeek_home }}/share/zeek/site/local.zeek"
        mode: '0644'
      vars:
        local_site_nets: "{{ site_config.zeek.local_nets | default([network_prefix + '.0.0/16']) }}"
        # Add other RFC1918 networks or specific local nets from site_config if needed

    - name: Configure Zeek node setup (node.cfg)
      ansible.builtin.template:
        src: templates/zeek/node.cfg.j2 # Assumes template exists
        dest: "{{ zeek_home }}/etc/node.cfg"
        mode: '0644'
      # zeek_monitor_interfaces is passed to the template

    - name: Configure Zeek logging and scripts (was appended to local.zeek, better to separate or use @load)
      ansible.builtin.copy:
        content: |
          # Ansible Managed: {{ ansible_managed }}
          # Common Zeek scripts and logging settings for {{ site_config.name | default('default_site') }}

          @load policy/tuning/json-logs
          @load frameworks/files/hash-all-files
          @load frameworks/software/version-changes
          @load frameworks/software/vulnerable
          @load misc/detect-traceroute
          @load misc/scan
          @load misc/stats
          @load policy/frameworks/signatures/detect-windows-shells
          @load protocols/ftp/software
          @load protocols/smtp/software
          @load protocols/ssh/software       # For general SSH logging
          @load protocols/http/software
          @load protocols/dns/detect-external-names
          @load policy/protocols/conn/vlan-logging
          @load policy/protocols/conn/mac-logging
          @load policy/protocols/ssl/validate-certs
          @load policy/protocols/ssl/log-hostcerts-only
          @load policy/protocols/http/var-extraction-cookies
          @load policy/protocols/http/var-extraction-uri

          # Enhanced detection (good defaults)
          @load policy/integration/collective-intel    # If you have an intel framework setup
          @load policy/protocols/ssl/detect-weak-keys
          @load policy/protocols/ssh/detect-bruteforcing # Often a good default
          # @load policy/protocols/http/detect-sqli # Can be noisy, enable if needed or rely on specific notices

          # Load standard plugins (assuming their .zeek files are in the site directory)
          @load ja3
          @load communityid
          # @load spicy-analyzers/dpd # Example if another common plugin was added

          # Custom settings specific to our network
          redef LogAscii::use_json = T;

          # Log suspicious activity - make this configurable via site_config.zeek.notice_types
          {% if site_config.zeek.notice_types is defined and site_config.zeek.notice_types | length > 0 %}
          redef Notice::emailed_types += {
          {% for notice in site_config.zeek.notice_types %}
              {{ notice }}{{ ',' if not loop.last else '' }}
          {% endfor %}
          };
          {% else %}
          # Default notice types if not specified in site_config (these are often good starting points)
          redef Notice::emailed_types += {
              Scan::Port_Scan,
              Scan::Address_Scan,
              SSH::Password_Guessing,           # Covered by detect-bruteforcing script as well
              # HTTP::SQL_Injection_Attacker,   # Can be very noisy depending on apps
              Weird::Activity,
              Signatures::Sensitive_Signature,  # If using signature detection
              SSL::Invalid_Server_Cert,
              SSL::Weak_Cipher_Found
          };
          {% endif %}
        dest: "{{ zeek_home }}/share/zeek/site/json-logging-and-scripts.zeek"
        mode: '0644'
      # Ensure local.zeek @loads this, or manage directly in local.zeek.j2

    # Install common/standard Zeek plugins by default
    - name: Install Ja3 Zeek plugin (standard)
      block:
        - name: Clone Ja3 plugin repository
          ansible.builtin.git:
            repo: 'https://github.com/salesforce/ja3.git'
            dest: "/tmp/zeek_plugin_ja3"
            version: 'master' # Or a specific tag/commit
        - name: Copy Ja3 plugin files to Zeek site directory
          ansible.builtin.copy:
            src: "/tmp/zeek_plugin_ja3/zeek/{{ item }}"
            dest: "{{ zeek_home }}/share/zeek/site/"
            mode: '0644'
            remote_src: true
          loop:
            - 'ja3.zeek'
            - 'ja3s.zeek'
            - 'ja3.hlto'
          # Add creates for idempotency, e.g. based on the .hlto file
          # This part needs a robust idempotency check, e.g. a shell task that checks and then copies.
          # For simplicity here, we rely on git clone not re-cloning if dir exists.

    - name: Install Zeek Community ID plugin (standard)
      ansible.builtin.shell:
        cmd: "{{ zeek_home }}/bin/zkg install zeek/corelight/community-id --force"
        # Using --force to ensure it attempts install/update if already there.
        # More robust idempotency would be checking if a specific file from the plugin exists.
      args:
        # Heuristic for idempotency, check for a known file provided by the plugin
        creates: "{{ zeek_home }}/lib/zeek/plugins/Corelight_CommunityID/lib/Corelight_CommunityID.hlto"
      register: zkg_community_id_install
      changed_when: "'already installed' not in zkg_community_id_install.stdout and zkg_community_id_install.rc == 0"

    # Install additional configured Zeek plugins from site_config
    - name: Install additional configured Zeek plugins (from site_config.zeek.plugins)
      ansible.builtin.include_tasks: tasks/zeek_install_plugin.yml
      when: site_config.zeek.plugins is defined

    - name: Deploy Zeek systemd service file
      ansible.builtin.template:
        src: templates/zeek/zeek.service.j2 # Assumes template exists
        dest: /etc/systemd/system/zeek.service
        mode: '0644'
      notify: Reload systemd and restart Zeek

    - name: Deploy log rotation for Zeek logs
      ansible.builtin.template:
        src: templates/zeek/zeek.logrotate.j2 # Assumes template exists
        dest: /etc/logrotate.d/zeek
        mode: '0644'

    - name: Deploy script to forward Zeek alerts to OPNsense
      ansible.builtin.template:
        src: templates/zeek/zeek-alert-forwarder.sh.j2 # Assumes template exists
        dest: "/usr/local/bin/zeek-alert-forwarder.sh"
        mode: '0755'
      # opnsense_mgmt_ip is passed to the template

    - name: Deploy Zeek alert forwarder systemd service
      ansible.builtin.template:
        src: templates/zeek/zeek-alert-forwarder.service.j2 # Assumes template exists
        dest: /etc/systemd/system/zeek-alert-forwarder.service
        mode: '0644'
      notify: Reload systemd and restart zeek-alert-forwarder

  handlers:
    - name: Reload systemd and restart Zeek
      ansible.builtin.systemd:
        daemon_reload: true
        name: zeek
        state: restarted
      when: site_config.zeek.enabled | default(true)

    - name: Reload systemd and restart zeek-alert-forwarder
      ansible.builtin.systemd:
        daemon_reload: true
        name: zeek-alert-forwarder
        state: restarted
      when: site_config.zeek.alert_forwarder_enabled | default(true)

# Note: Templates (local.zeek.j2, node.cfg.j2, zeek.service.j2, etc.)
# and the zeek_install_plugin.yml task file need to be created.
