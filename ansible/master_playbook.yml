---
# Master playbook for Proxmox Firewall deployment
# This playbook orchestrates the entire deployment process

- name: Master Playbook for Proxmox Firewall Deployment
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display deployment banner
      ansible.builtin.debug:
        msg:
          - "==================================================="
          - "Proxmox Firewall Deployment - Master Playbook"
          - "==================================================="
          - "This playbook will run the following stages:"
          - "1. Configure Proxmox repositories (no subscription)"
          - "2. Perform initial Proxmox system setup"
          - "3. Configure Terraform API access"
          - "4. Set up network transition and bridges"
          - "5. Create VM templates (Ubuntu, OPNsense)"
          - "6. Deploy VMs with Terraform"
          - "7. Configure OPNsense firewalls with Tailscale"
          - "8. Set up security monitoring (Suricata, Zeek)"
          - "==================================================="
      tags: always

    - name: Create credentials directory
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../credentials"
        state: directory
        mode: '0700'
      tags: always

    - name: Ensure .env file exists
      ansible.builtin.copy:
        content: |
          # Proxmox Secrets
          ROOT_PASSWORD="your_secure_password"
          ADMIN_EMAIL="admin@example.com"
          # API keys will be added automatically by playbooks
        dest: "{{ playbook_dir }}/../.env"
        force: false
        mode: '0600'
      tags: always

    - name: Load environment variables
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/../.env"
        name: env_vars
      ignore_errors: true
      tags: always

    - name: Load site configurations
      ansible.builtin.include_vars:
        file: "group_vars/{{ item }}.yml"
        name: "site_vars"
      loop: "{{ sites | default(['site1', 'site2']) }}"
      loop_control:
        label: "{{ item }}"
      tags: always

    - name: Verify required environment variables
      ansible.builtin.fail:
        msg: "Missing required environment variable: {{ item }}"
      loop: "{{ site_vars.keys() | map('regex_replace', '^', 'PROXMOX_API_SECRET_') | map('upper') | list + ['TF_VAR_tailscale_auth_key', 'TF_VAR_tailscale_password', 'TF_VAR_omada_password'] }}"
      when: "item not in env_vars"
      tags: always

    - name: Set environment variables for Ansible
      ansible.builtin.set_fact:
        ansible_env: "{{ ansible_env | combine(env_vars) }}"
      tags: always

# Import playbooks for each stage
- name: Configure Proxmox repositories
  import_playbook: playbooks/00_configure_repos.yml
  tags: ['repos', 'initial']

- name: Perform initial Proxmox setup
  import_playbook: playbooks/01_initial_setup.yml
  tags: ['initial', 'setup']

- name: Update SSH keys
  import_playbook: playbooks/02a_update_ssh_keys.yml
  tags: ['security', 'ssh']

- name: Configure Terraform API access
  import_playbook: playbooks/02_terraform_api.yml
  tags: ['api', 'terraform']

- name: Set up network transition
  import_playbook: playbooks/03a_network_transition.yml
  tags: ['network', 'transition']

- name: Configure network bridges and VLANs
  import_playbook: playbooks/03_network_setup.yml
  tags: ['network']

- name: Create VM templates
  import_playbook: playbooks/04_vm_templates.yml
  tags: ['templates', 'vm']

- name: Deploy VMs with Terraform
  import_playbook: playbooks/05_deploy_vms.yml
  tags: ['deploy', 'vm']

- name: Configure OPNsense firewalls
  import_playbook: playbooks/06_opnsense_setup.yml
  tags: ['opnsense', 'firewall']

- name: Set up Tailscale integration
  import_playbook: playbooks/07c_opnsense_tailscale.yml
  tags: ['opnsense', 'tailscale', 'network']

- name: Configure Suricata IDS/IPS
  import_playbook: playbooks/07a_opnsense_suricata.yml
  tags: ['security', 'suricata']

- name: Set up Zeek network monitoring
  import_playbook: playbooks/07b_zeek_setup.yml
  tags: ['security', 'zeek']

# Optional playbook - tagged with 'never' to prevent accidental execution
- name: Disable root password authentication
  import_playbook: playbooks/02b_disable_root_password.yml
  tags: ['security', 'ssh', 'never']

- name: Deployment Summary
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Deployment summary
      ansible.builtin.debug:
        msg:
          - "==================================================="
          - "Deployment Complete!"
          - "==================================================="
          - "API credentials have been saved to: {{ playbook_dir }}/../credentials/"
          - "Main services deployed:"
          - "  - OPNsense firewall with Tailscale: {{ site_vars[item].network_prefix }}.50.1"
          - "  - Omada Controller: {{ site_vars[item].network_prefix }}.50.2"
          - "  - Zeek Security Monitor: {{ site_vars[item].network_prefix }}.50.4"
          - "  - Proxmox Management: {{ site_vars[item].network_prefix }}.50.10"
          - "Security monitoring URLs:"
          - "  - OPNsense Suricata: https://{{ site_vars[item].network_prefix }}.50.1/ui/ids"
          - "  - OPNsense Tailscale: https://{{ site_vars[item].network_prefix }}.50.1/ui/tailscale"
          - "  - Zeek Dashboard: http://{{ site_vars[item].network_prefix }}.50.4:8888"
          - "==================================================="
      loop: "{{ sites | default(['site1', 'site2']) }}"
      tags: always
