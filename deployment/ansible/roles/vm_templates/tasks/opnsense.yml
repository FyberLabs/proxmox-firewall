---
- name: Load validated images
  ansible.builtin.include_vars:
    file: "{{ playbook_dir }}/group_vars/validated_images.json"
    name: validated_images

- name: Check if OPNsense image exists
  stat:
    path: "{{ validated_images.opnsense_image_path }}"
  register: opnsense_image

- name: Fail if OPNsense image not found
  ansible.builtin.fail:
    msg: "OPNsense image not found at {{ validated_images.opnsense_image_path }}. Please run download_latest_images.sh first."
  when: not opnsense_image.stat.exists

- name: Create OPNsense VM template
  shell: >
    qm create {{ template_id }} --name "{{ template_name }}" --memory 4096 --cores 2 --net0 virtio,bridge=vmbr0 &&
    qm set {{ template_id }} --scsihw virtio-scsi-pci &&
    qm set {{ template_id }} --virtio0 {{ storage_pool }}:32G &&
    qm set {{ template_id }} --bootdisk virtio0 &&
    qm set {{ template_id }} --serial0 socket &&
    qm set {{ template_id }} --ostype l26 &&
    qm set {{ template_id }} --ide2 {{ storage_pool }}:cdrom,media=cdrom &&
    qm importdisk {{ template_id }} {{ validated_images.opnsense_image_path }} {{ storage_pool }} &&
    qm set {{ template_id }} --cdrom {{ storage_pool }}:vm-{{ template_id }}-disk-1 &&
    qm set {{ template_id }} --boot c --bootdisk virtio0 &&
    qm template {{ template_id }}
  args:
    executable: /bin/bash
  register: template_result
  changed_when: template_result.rc == 0
  failed_when: template_result.rc != 0 and "already exists" not in template_result.stderr

- name: Create a note about OPNsense template
  debug:
    msg: |
      OPNsense template created. To use this template:
      1. Clone it with "qm clone {{ template_id }} NEW_ID --name opnsense"
      2. Add additional network interfaces as needed
      3. Start the VM and complete the installation process
      4. After installation, convert the VM back to a template if desired
  when: template_result.changed
