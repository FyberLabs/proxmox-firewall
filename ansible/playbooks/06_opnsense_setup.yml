---
- name: Configure OPNsense Firewalls
  hosts: opnsense
  gather_facts: true
  collections:
    - ansibleguy.opnsense
  vars:
    opn_api_key: "{{ lookup('env', 'OPNSENSE_API_KEY') | default(omit) }}"
    opn_api_secret: "{{ lookup('env', 'OPNSENSE_API_SECRET') | default(omit) }}"
    opn_api_host: "{{ inventory_hostname }}"
    opn_api_timeout: 120
    opn_ca_path: false
    opn_ssl_verify: false
    location_prefix: "{{ 'TN' if 'tennessee' in group_names else 'PH' }}"
    opnsense_api_key: "{{ lookup('env', location_prefix + '_OPNSENSE_API_KEY') | default('ansible') }}"
    opnsense_api_secret: "{{ lookup('env', location_prefix + '_OPNSENSE_API_SECRET') | default('') }}"
    
  tasks:
    - name: Install Ansible OPNsense collection
      delegate_to: localhost
      ansible.builtin.shell: "ansible-galaxy collection install ansibleguy.opnsense"
      changed_when: false
      run_once: true
    
    - name: Run initial OPNsense setup
      include_tasks: tasks/opnsense_initial_setup.yml
      when: not opnsense_api_secret
      
    - name: Configure general settings
      ansibleguy.opnsense.system_general:
        hostname: "opnsense-{{ 'tn' if 'tennessee' in group_names else 'ph' }}"
        domain: "{{ 'tn' if 'tennessee' in group_names else 'ph' }}.local"
        timezone: "UTC"
      
    - name: Include location-specific interface configuration
      include_tasks: "tasks/opnsense_interfaces_{{ 'tennessee' if 'tennessee' in group_names else 'primary_home' }}.yml"
      
    - name: Include location-specific firewall rules configuration
      include_tasks: "tasks/opnsense_firewall_{{ 'tennessee' if 'tennessee' in group_names else 'primary_home' }}.yml"
      
    - name: Install and configure Tailscale package
      ansibleguy.opnsense.package:
        name: os-tailscale
        state: present 