---
- name: Master Playbook for Proxmox Firewall Deployment
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display deployment banner
      debug:
        msg: 
          - "==================================================="
          - "Proxmox Firewall Deployment - Master Playbook"
          - "==================================================="
          - "This playbook will run the following stages:"
          - "1. Configure Proxmox repositories (no subscription)"
          - "2. Perform initial Proxmox system setup"
          - "3. Configure Terraform API access"
          - "4. Set up network bridges and VLANs"
          - "5. Create VM templates (Ubuntu, OPNsense)"
          - "6. Deploy VMs with Terraform"
          - "7. Configure OPNsense firewalls"
          - "8. Set up security monitoring (Suricata, Zeek)"
          - "==================================================="
      tags: always

    - name: Create credentials directory
      file:
        path: "{{ playbook_dir }}/../credentials"
        state: directory
        mode: '0700'
      tags: always

    - name: Ensure .env file exists
      copy:
        content: |
          # Proxmox Secrets
          ROOT_PASSWORD="your_secure_password"
          ADMIN_EMAIL="admin@example.com"
          # API keys will be added automatically by playbooks
        dest: "{{ playbook_dir }}/../.env"
        force: no
        mode: '0600'
      tags: always

    - name: Include Configure Proxmox repositories playbook
      import_playbook: playbooks/00_configure_repos.yml
      tags: ['repos', 'initial']

    - name: Include Initial Setup playbook
      import_playbook: playbooks/01_initial_setup.yml
      tags: ['initial', 'setup']

    - name: Include Update SSH Keys playbook
      import_playbook: playbooks/02a_update_ssh_keys.yml
      tags: ['security', 'ssh']

    - name: Include Terraform API Setup playbook
      import_playbook: playbooks/02_terraform_api.yml
      tags: ['api', 'terraform']

    - name: Include Network Setup playbook
      import_playbook: playbooks/03_network_setup.yml
      tags: ['network']

    - name: Include VM Templates playbook
      import_playbook: playbooks/04_vm_templates.yml
      tags: ['templates', 'vm']

    - name: Include Deploy VMs playbook
      import_playbook: playbooks/05_deploy_vms.yml
      tags: ['deploy', 'vm']

    - name: Include OPNsense Setup playbook
      import_playbook: playbooks/06_opnsense_setup.yml
      tags: ['opnsense', 'firewall']
      
    - name: Include Suricata IDS/IPS Setup playbook
      import_playbook: playbooks/07a_opnsense_suricata.yml
      tags: ['security', 'suricata']
      
    - name: Include Zeek Network Monitor Setup playbook
      import_playbook: playbooks/07b_zeek_setup.yml
      tags: ['security', 'zeek']

    - name: Optional - Disable Root Password Authentication
      import_playbook: playbooks/02b_disable_root_password.yml
      tags: ['security', 'ssh', 'never']
      # This playbook is tagged with 'never' to prevent accidental execution
      # Run with: ansible-playbook master_playbook.yml --tags security,ssh

    - name: Deployment summary
      debug:
        msg:
          - "==================================================="
          - "Deployment Complete!"
          - "==================================================="
          - "API credentials have been saved to: {{ playbook_dir }}/../credentials/"
          - "Main services deployed:"
          - "  - OPNsense firewall: {{ item.prefix }}.50.1"
          - "  - Omada Controller: {{ item.prefix }}.50.2"
          - "  - Tailscale VM: {{ item.prefix }}.50.3"
          - "  - Zeek Security Monitor: {{ item.prefix }}.50.4"
          - "Security monitoring URLs:"
          - "  - OPNsense Suricata: https://{{ item.prefix }}.50.1/ui/ids"
          - "  - Zeek Dashboard: http://{{ item.prefix }}.50.4:8888"
          - "==================================================="
      loop:
        - { location: "Tennessee", prefix: "10.1" }
        - { location: "Primary Home", prefix: "10.2" }
      tags: always
