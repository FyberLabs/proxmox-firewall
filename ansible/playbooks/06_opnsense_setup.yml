---
# ansible-lint disable=missing-module

- name: Configure OPNsense Firewalls
  hosts: opnsense
  gather_facts: true
  vars:
    opn_api_key: "{{ lookup('env', 'OPNSENSE_API_KEY') | default(omit) }}"
    opn_api_secret: "{{ lookup('env', 'OPNSENSE_API_SECRET') | default(omit) }}"
    opn_api_host: "{{ inventory_hostname }}"
    opn_api_timeout: 120
    opn_ca_path: false
    opn_ssl_verify: false
    location_prefix: "{{ 'TN' if 'tennessee' in group_names else 'PH' }}"
    opnsense_api_key: "{{ lookup('env', location_prefix + '_OPNSENSE_API_KEY') | default('ansible') }}"
    opnsense_api_secret: "{{ lookup('env', location_prefix + '_OPNSENSE_API_SECRET') | default('') }}"

  pre_tasks:
    - name: Check if OPNsense collection is installed
      ansible.builtin.command: ansible-galaxy collection list ansibleguy.opnsense
      register: opnsense_collection
      changed_when: false
      failed_when: false
      delegate_to: localhost

    - name: Install Ansible OPNsense collection if needed
      ansible.builtin.command: ansible-galaxy collection install ansibleguy.opnsense
      changed_when: true
      delegate_to: localhost
      when: "'ansibleguy.opnsense' not in opnsense_collection.stdout"

  tasks:
    - name: Run initial OPNsense setup
      ansible.builtin.include_tasks: tasks/opnsense_initial_setup.yml
      when: not opnsense_api_secret

    - name: Configure general settings
      ansibleguy.opnsense.system_general:
        hostname: "opnsense-{{ 'tn' if 'tennessee' in group_names else 'ph' }}"
        domain: "{{ 'tn' if 'tennessee' in group_names else 'ph' }}.local"
        timezone: "UTC"

    - name: Include location-specific interface configuration
      ansible.builtin.include_tasks: "tasks/opnsense_interfaces_{{ 'tennessee' if 'tennessee' in group_names else 'primary_home' }}.yml"

    - name: Configure WAN failover between fiber and Starlink
      ansible.builtin.uri:
        url: "https://{{ opn_api_host }}/api/routes/gateway/addItem"
        method: POST
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: true
        validate_certs: false
        body_format: json
        body:
          gateway:
            name: "WANFAILOVER"
            description: "Auto-failover between Fiber and Starlink"
            gateway_items: [
              {"value": "WAN_FIBER|1|fiber", "data": "Fiber (Primary)"},
              {"value": "WAN_STARLINK|2|starlink", "data": "Starlink (Backup)"}
            ]
            trigger_level: "packet_loss"
            trigger_interval: "1000"
            weight: "1"
            default: "1"
        status_code: [200, 201, 202]
      register: gateway_group_result

    - name: Apply gateway changes
      ansible.builtin.uri:
        url: "https://{{ opn_api_host }}/api/routes/gateway/reconfigure"
        method: POST
        user: "{{ opnsense_api_key }}"
        password: "{{ opnsense_api_secret }}"
        force_basic_auth: true
        validate_certs: false
        status_code: [200, 201, 202]
      register: apply_gw

    - name: Include location-specific firewall rules configuration
      ansible.builtin.include_tasks: "tasks/opnsense_firewall_{{ 'tennessee' if 'tennessee' in group_names else 'primary_home' }}.yml"

    - name: Install and configure Tailscale package
      ansibleguy.opnsense.package:
        name: os-tailscale
        state: present

    - name: Include site-specific variables
      ansible.builtin.include_vars:
        file: "{{ ansible_user_dir }}/group_vars/{{ inventory_hostname.split('_')[0] }}.yml"

    - name: Set network prefix from site config
      ansible.builtin.set_fact:
        network_prefix: "{{ site_config.network_prefix }}"
        domain: "{{ site_config.domain }}"

    - name: Configure OPNsense interfaces
      ansible.builtin.include_tasks: tasks/opnsense_interfaces.yml
      tags: ['network', 'interfaces']

    - name: Configure OPNsense device firewall rules
      ansible.builtin.include_tasks: tasks/opnsense_device_firewall.yml
      tags: ['network', 'firewall']
      when: site_devices is defined

    - name: Configure OPNsense WAN gateways and failover
      ansible.builtin.include_tasks: tasks/opnsense_wan_failover.yml
      tags: ['network', 'wan']

    - name: Configure OPNsense basic services (DNS, NTP, etc.)
      ansible.builtin.include_tasks: tasks/opnsense_services.yml
      tags: ['services']
